// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package distri_ai

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// AdminInitStatistics is the `adminInitStatistics` instruction.
type AdminInitStatistics struct {
	Owner *ag_solanago.PublicKey

	// [0] = [WRITE] statisticsOwner
	//
	// [1] = [WRITE, SIGNER] admin
	//
	// [2] = [] systemProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewAdminInitStatisticsInstructionBuilder creates a new `AdminInitStatistics` instruction builder.
func NewAdminInitStatisticsInstructionBuilder() *AdminInitStatistics {
	nd := &AdminInitStatistics{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 3),
	}
	return nd
}

// SetOwner sets the "owner" parameter.
func (inst *AdminInitStatistics) SetOwner(owner ag_solanago.PublicKey) *AdminInitStatistics {
	inst.Owner = &owner
	return inst
}

// SetStatisticsOwnerAccount sets the "statisticsOwner" account.
func (inst *AdminInitStatistics) SetStatisticsOwnerAccount(statisticsOwner ag_solanago.PublicKey) *AdminInitStatistics {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(statisticsOwner).WRITE()
	return inst
}

// GetStatisticsOwnerAccount gets the "statisticsOwner" account.
func (inst *AdminInitStatistics) GetStatisticsOwnerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetAdminAccount sets the "admin" account.
func (inst *AdminInitStatistics) SetAdminAccount(admin ag_solanago.PublicKey) *AdminInitStatistics {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(admin).WRITE().SIGNER()
	return inst
}

// GetAdminAccount gets the "admin" account.
func (inst *AdminInitStatistics) GetAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *AdminInitStatistics) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *AdminInitStatistics {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *AdminInitStatistics) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

func (inst AdminInitStatistics) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_AdminInitStatistics,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst AdminInitStatistics) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *AdminInitStatistics) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Owner == nil {
			return errors.New("Owner parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.StatisticsOwner is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Admin is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *AdminInitStatistics) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("AdminInitStatistics")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Owner", *inst.Owner))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=3]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("statisticsOwner", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("          admin", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("  systemProgram", inst.AccountMetaSlice.Get(2)))
					})
				})
		})
}

func (obj AdminInitStatistics) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Owner` param:
	err = encoder.Encode(obj.Owner)
	if err != nil {
		return err
	}
	return nil
}
func (obj *AdminInitStatistics) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Owner`:
	err = decoder.Decode(&obj.Owner)
	if err != nil {
		return err
	}
	return nil
}

// NewAdminInitStatisticsInstruction declares a new AdminInitStatistics instruction with the provided parameters and accounts.
func NewAdminInitStatisticsInstruction(
	// Parameters:
	owner ag_solanago.PublicKey,
	// Accounts:
	statisticsOwner ag_solanago.PublicKey,
	admin ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *AdminInitStatistics {
	return NewAdminInitStatisticsInstructionBuilder().
		SetOwner(owner).
		SetStatisticsOwnerAccount(statisticsOwner).
		SetAdminAccount(admin).
		SetSystemProgramAccount(systemProgram)
}
